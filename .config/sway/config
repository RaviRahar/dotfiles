# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Custom

# Startup programs
#exec --no-startup-id mpd  

# i3-gaps
gaps inner 5
gaps outer 5
#smart_gaps on
default_border pixel 1
default_floating_border pixel 1
smart_borders on
hide_edge_borders none

# Set colors
set $transparent         #000000AA
set $white               #f3f4f5
set $white-less          #d4d4d4
set $black               #282828
set $darkblack           #1d2021
set $slate               #333333
set $purple              #676E7D
set $mag                 #fb246f
set $aqua                #83a598
set $yellow              #fabd2f


# set some nice colors  border       background   text
client.focused          $aqua        $aqua        $white
client.unfocused        $transparent $transparent $white-less
client.focused_inactive $mag         $mag         $white-less
client.urgent           $yellow      $yellow      $white

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: FiraCode Nerd Font Regular 9
#font pango: NotoSansRegular Regular 9

###################################################################################

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show run

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/wallpapers/Naruto.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000 -i /usr/share/backgrounds/wallpapers/Naruto.jpg' \
         timeout 300 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000 -i /usr/share/backgrounds/wallpapers/Naruto.jpg'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
input "1739:10629:Synaptics_s3203" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Multimedia keys
#
#
    # Pulse Audio controls
    bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
    bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
    bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound
    # Media player controls
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86AudioStop  exec playerctl stop
    # Sreen brightness controls -- # https://github.com/haikarainen/light
    bindsym XF86MonBrightnessUp exec light -A 5    # increase screen brightness
    bindsym XF86MonBrightnessDown exec light -U 5  # decrease screen brightness
    # multimedia keys
    #bindsym XF86AudioPlay  exec "mpc toggle"
    #bindsym XF86AudioStop  exec "mpc stop"
    #bindsym XF86AudioNext  exec "mpc next"
    #bindsym XF86AudioPrev  exec "mpc prev"
    #bindsym XF86AudioPause exec "mpc pause"   
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar


    #position top

    ## When the status_command prints a new line to stdout, swaybar updates.
    ## The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    #colors {
    #    statusline #ffffff
    #    background #323232
    #    inactive_workspace #32323200 #32323200 #5c5c5c
    #}
}
#
# Screenshot
#
bindsym --release Print exec --no-startup-id "grimshot save screen $HOME/Pictures/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png"
bindsym --release Shift+Print exec --no-startup-id "grimshot save area $HOME/Pictures/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png"
#
# Resize Mode Settings
#
bindsym $mod+r mode "resize"
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
#
# Launcher Mode Settings
#
# Press $mod+o followed by either f, t, Esc or Return to launch firefox,
# thunderbird or return to the default mode, respectively.
bindsym $mod+o mode "launcher"
mode "launcher" {
    bindsym t exec alacritty;  mode "default"
    bindsym e exec nemo;  mode "default"
    bindsym f exec firefox;  mode "default"
    bindsym n exec alacritty -e nvim;  mode "default"
    bindsym g exec alacritty -e gtypist;  mode "default"
    bindsym m exec alacritty -e termusic;  mode "default"
    bindsym c exec alacritty -e nmtui-connect;  mode "default"

    bindsym q      mode "default"
    bindsym w      mode "launcherSustain"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

mode "launcherSustain" {
    bindsym t exec alacritty
    bindsym e exec nemo
    bindsym f exec firefox
    bindsym n exec alacritty -e nvim
    bindsym g exec alacritty -e gtypist
    bindsym m exec alacritty -e termusic
    bindsym c exec alacritty -e nmtui-connect

    bindsym q      mode "default"
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
#
# Power Mode Settings
#
bindsym $mod+Shift+p mode "power"
mode "power" {
    bindsym p         exec systemctl poweroff
    bindsym r         exec systemctl reboot 
    bindsym l         exec i3lock -i /usr/share/backgrounds/wallpapers/Naruto.jpg; mode "default"
    #bindsym q         exec --no-startup-id i3-msg exit, mode "default"
    #bindsym h         exec systemctl hibernate 
    bindsym s        exec sudo  /lib/systemd/systemd-sleep hybrid-sleep 
    #bindsym s         exec pm-suspend

    
    bindsym q         mode "default"
    bindsym Return    mode "default"
    bindsym Escape    mode "default"
}
#
# Floating windows
#
floating_maximum_size 1280 x 720

for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable

for_window [window_role="task_dialog|bubble|page-info|Preferences|pop-up"] floating enable
for_window [window_role="Open Files"] floating enable sticky
for_window [window_role="File Operation Progress"] floating enable sticky
for_window [window_role="Save As"] floating enable

for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable

# Sticky window
for_window [instance="file_progress"]  sticky enable

# Focus window settings
no_focus [window_role="pop-up"]
focus_on_window_activation focus 
for_window [class="Dunst"] floating enable sticky 
#for_window [class="(?i)"] focus 
#
# Input
#
input * {
xkb_layout "us"
xkb_options "ctrl:nocaps"
#xkb_options "ctrl:swapcaps"
}

include /etc/sway/config.d/*
