####################
### KEYBINDINGSS ###
####################

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, R, exec, $menu -opacity 90
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, Q, exec, $terminal
bind = $mainMod, Y, exec, freetube
# bind = $mainMod, RETURN, exec, $terminal
bind = $mainMod, S, exec, firefox -P default-release
bind = $mainMod, W, exec, firefox -P Work
bind = $mainMod, O, exec, firefox -P

bind = $mainMod,F,fullscreen, 1
bind = $mainMod SHIFT,F,fullscreen
bind = $mainMod, M, exit,
# bind = $mainMod Control, Q, exit,
bind = $mainMod, C, killactive,
bind = $mainMod, T, togglefloating,
bind = $mainMod, V, exec, cliphist list | rofi -dmenu -config ~/.config/rofi/theme-dmenu-gruvbox-dark.rasi | cliphist decode | wl-copy && wtype -M ctrl shift -P v -m ctrl
# bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod SHIFT, S, togglesplit, # dwindle

bindel=, XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%+
bindel=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%-
bindl=, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

bindel=, XF86MonBrightnessDown, exec, brillo -q -U 5 -u 1000
bindel=, XF86MonBrightnessUp, exec, brillo -q -A 5 -u 1000
bindel=, XF86KbdBrightnessDown, exec, asusctl led-pow-2 keyboard
bindel=, XF86KbdBrightnessUp, exec, asusctl led-pow-2 keyboard -Sab

bind=, XF86Launch1, exec, rog-control-center 
bind=, XF86Launch3, exec, asusctl led-mode -n
bind=, XF86Launch4, exec, asusctl profile -n

# Print key send Super + Shift + S keycombo
bind=$mainMod SHIFT, S, exec, mkdir -p $HOME/Pictures/Screenshots; grimshot savecopy screen $HOME/Pictures/Screenshots/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png
bind=$mainMod SHIFT ALT, S, exec, mkdir -p $HOME/Pictures/Screenshots; grimshot savecopy area $HOME/Pictures/Screenshots/screenshot-$(date +%Y-%m-%d_%H-%M-%S).png
# OCR
bind =$mainMod SHIFT CONTROL, S,exec, mkdir -p /tmp/grimshot; grimshot savecopy area "/tmp/grimshot/tmp.png" && tesseract -l eng "/tmp/grimshot/tmp.png" - | wl-copy && rm "/tmp/grimshot/tmp.png" # Screen snip to text >> clipboard

# Move focus with mainMod + hjkl
bind = $mainMod, H, movefocus, l
bind = $mainMod, J, movefocus, d
bind = $mainMod, K, movefocus, u
bind = $mainMod, L, movefocus, r

bind = $mainMod SHIFT, H, swapwindow, l
bind = $mainMod SHIFT, J, swapwindow, d
bind = $mainMod SHIFT, K, swapwindow, u
bind = $mainMod SHIFT, L, swapwindow, r

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9

# Move active window to a workspace with mainMod + CONTROL + [0-9]
bind = $mainMod CONTROL, 1, movetoworkspace, 1
bind = $mainMod CONTROL, 2, movetoworkspace, 2
bind = $mainMod CONTROL, 3, movetoworkspace, 3
bind = $mainMod CONTROL, 4, movetoworkspace, 4
bind = $mainMod CONTROL, 5, movetoworkspace, 5
bind = $mainMod CONTROL, 6, movetoworkspace, 6
bind = $mainMod CONTROL, 7, movetoworkspace, 7
bind = $mainMod CONTROL, 8, movetoworkspace, 8
bind = $mainMod CONTROL, 9, movetoworkspace, 9

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9

# Example special workspace (scratchpad)
bind = $mainMod, 0, togglespecialworkspace, magic
bind = $mainMod SHIFT, 0, movetoworkspacesilent, special:magic
bind = $mainMod CONTROL, 0, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
# bind = $mainMod, mouse_down, workspace, e+1
# bind = $mainMod, mouse_up, workspace, e-1

bind = $mainMod,Tab,cyclenext,
bind = $mainMod SHIFT,Tab,cyclenext,prev
bind = $mainMod SHIFT,Tab,bringactivetotop,
bind = $mainMod,Tab,bringactivetotop,

bindm=$mainMod, mouse:272, movewindow
bindm=$mainMod, mouse:273, resizewindow
bindm=$mainMod SHIFT, mouse:272, resizewindow

# trigger when the switch is toggled
# bindl=,switch:[Lid Switch],exec,hyprlock
# # trigger when the switch is turning on
# bindl=,switch:on:[switch name],exec,hyprctl keyword monitor "eDP-1, disable"
# # trigger when the switch is turning off
# bindl=,switch:off:[switch name],exec,hyprctl keyword monitor "eDP-1, 2560x1600, 0x0, 1"


####################
### SUBMAPS ###
####################

# will switch to a submap called resize
bind = $mainMod SHIFT, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = ,right,resizeactive,10 0
binde = ,left,resizeactive,-10 0
binde = ,up,resizeactive,0 -10
binde = ,down,resizeactive,0 10

binde = ,h,resizeactive,-50 0
binde = ,j,resizeactive,0 50
binde = ,k,resizeactive,0 -50
binde = ,l,resizeactive,50 0

bind = $mainMod, Q, exec, $terminal
bind = $mainMod SHIFT, R, submap, reset

# use reset to go back to the global submap
bind = ,escape,submap,reset 
bind = CONTROL, bracketleft, submap, reset
# bind = ,catchall,submap,reset

# will reset the submap, which will return to the global submap
submap=reset


# will switch to a submap called resize
bind = $mainMod SHIFT, Q, submap, power

# will start a submap called "resize"
submap = power

# lock
bind = , L, exec, loginctl lock-session
bind = , L, submap, reset
# hibernate
bind = , H, exec, systemctl hibernate || loginctl hibernate
bind = , H, submap, reset
# logout
bind = , K, exec, pkill Hyprland || loginctl terminate-user $USER
bind = , K, submap, reset
# shutdown
bind = , Q, exec, systemctl poweroff || loginctl poweroff
bind = , Q, submap, reset
# suspend
bind = , S, exec, systemctl suspend || loginctl suspend
bind = , S, submap, reset
# reboot
bind = , R, exec, systemctl reboot || loginctl reboot
bind = , R, submap, reset

bind = $mainMod, Q, exec, $terminal
bind = $mainMod SHIFT, Q, submap, reset

# use reset to go back to the global submap
bind = ,escape,submap,reset 
bind = CONTROL, bracketleft, submap, reset
# bind = ,catchall,submap,reset

# will reset the submap, which will return to the global submap
submap=reset
