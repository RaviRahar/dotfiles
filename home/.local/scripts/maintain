#!/usr/bin/bash

## All the assumptions
k_path="/boot"
efi_path="/boot/EFI"
uki_path="/boot/EFI/Linux"
keys_path="/usr/share/keys"
cmdline_path="/usr/share/cmdline/cmdline"

__help="
Usage: $(basename $0) [OPTIONS] [Arguments]

Options:
    -s      : --sign
    -g      : --generate
Arguments:
-s|--sign:
            -b      : boot   
                    : bootloader
            -k      : kernel-image
            -u      : uki
                    : unified-kernel-image

Note: This Uses sbsign Program

-g|--generate:
            -k      : kernel
            -i      : initramfs
            -u      : uki
                    : unified-kernel-image
            -keys      : keys

Note: This Uses mkinitcpio Program
"

case "$1" in
    -s|--sign)
        case "$2" in
            -b|boot|bootloader)
                sudo sbsign --key ${keys_path}/db.key \
                            --cert ${keys_path}/db.crt \
                            --output ${efi_path}/BOOT/BOOTx64.EFI ${efi_path}/BOOT/BOOTx64.EFI
                sudo sbsign --key ${keys_path}/db.key \
                            --cert ${keys_path}/db.crt \
                            --output ${efi_path}/systemd/systemd-bootx64.efi ${efi_path}/systemd/systemd-bootx64.efi

            ;;
            -k|kernel-image)
                sudo sbsign --key ${keys_path}/db.key \
                            --cert ${keys_path}/db.crt \
                            --output ${k_path}/vmlinuz-linux ${k_path}/vmlinuz-linux;
                sudo sbsign --key ${keys_path}/db.key \
                            --cert ${keys_path}/db.crt \
                            --output ${k_path}/vmlinuz-linux-fallback ${k_path}/vmlinuz-linux-fallback

                # sudo sbsign --key ${keys_path}/db.key \
                #             --cert ${keys_path}/db.crt \
                #             --output ${k_path}/vmlinuz-linux-g14 ${k_path}/vmlinuz-linux-g14
            ;;
            -u|uki|unified-kernel-image)
                sudo sbsign --key ${keys_path}/db.key \
                            --cert ${keys_path}/db.crt \
                            --output ${uki_path}/uki-linux.efi ${uki_path}/uki-linux.efi
            ;;
            *)
                echo "$__help"
            ;;
        esac
    ;;
    -g|--generate)
        case "$2" in
            -k|kernel)
                sudo pacman -S linux;
                # sudo pacman -S linux-g14;
            ;;
            -i|initramfs)
                sudo mkinitcpio -p linux;
                # sudo mkinitcpio -p linux-g14;
            ;;
            -u|uki|unified-kernel-image)
                echo -e "Kernel Parameters Used: \n";
                cat ${cmdline_path};
                echo -e "\n\n";
                echo -e "Make G14 [y/N]:";
                read option;
                echo -e "\n\n";

                case "$option" in
                    y|Y|yes|YES|Yes)
                    sudo mkinitcpio -p linux-g14 -- \
                                --uefi ${uki_path}/uki-linux.efi \
                                --cmdline ${cmdline_path}
                    ;;
                    *)
                    sudo mkinitcpio -p linux -- \
                                --uefi ${uki_path}/uki-linux.efi \
                                --cmdline ${cmdline_path}
                    ;;
                esac
            ;;
            -keys)
                sudo mkdir -p ${keys_path};
                uuidgen --random | sudo tee ${keys_path}/GUID.txt;
                # Platform Key
                sudo openssl req -newkey rsa:4096 \
                            -nodes \
                            -keyout ${keys_path}/PK.key \
                            -new -x509 -sha256 \
                            -days 3650 \
                            -subj "/CN=The Golden Platform Key/" \
                            -out ${keys_path}/PK.crt;
                sudo openssl x509 -outform DER -in ${keys_path}/PK.crt -out ${keys_path}/PK.cer;
                sudo cert-to-efi-sig-list -g "$(< ${keys_path}/GUID.txt)" ${keys_path}/PK.crt ${keys_path}/PK.esl;
                sudo sign-efi-sig-list -g "$(< ${keys_path}/GUID.txt)" \
                                  -k ${keys_path}/PK.key \
                                  -c ${keys_path}/PK.crt \
                                  PK ${keys_path}/PK.esl ${keys_path}/PK.auth;
                # Key Exchange Key
                sudo openssl req -newkey rsa:4096 \
                            -nodes \
                            -keyout ${keys_path}/KEK.key \
                            -new -x509 -sha256 \
                            -days 3650 \
                            -subj "/CN=The Golden Key Exchange Key/" \
                            -out ${keys_path}/KEK.crt;
                sudo openssl x509 -outform DER -in ${keys_path}/KEK.crt -out ${keys_path}/KEK.cer;
                sudo cert-to-efi-sig-list -g "$(< ${keys_path}/GUID.txt)" ${keys_path}/KEK.crt ${keys_path}/KEK.esl;
                sudo sign-efi-sig-list -g "$(< ${keys_path}/GUID.txt)" \
                                  -k ${keys_path}/PK.key \
                                  -c ${keys_path}/PK.crt \
                                  KEK ${keys_path}/KEK.esl ${keys_path}/KEK.auth;
                # Signature Database Key
                sudo openssl req -newkey rsa:4096 \
                            -nodes \
                            -keyout ${keys_path}/db.key \
                            -new -x509 -sha256 \
                            -days 3650 \
                            -subj "/CN=The Golden Signature Database key/" \
                            -out ${keys_path}/db.crt;
                sudo openssl x509 -outform DER -in ${keys_path}/db.crt -out ${keys_path}/db.cer;
                sudo cert-to-efi-sig-list -g "$(< ${keys_path}/GUID.txt)" ${keys_path}/db.crt ${keys_path}/db.esl;
                sudo sign-efi-sig-list -g "$(< ${keys_path}/GUID.txt)" \
                                  -k ${keys_path}/KEK.key \
                                  -c ${keys_path}/KEK.crt \
                                  db ${keys_path}/db.esl ${keys_path}/db.auth;
            ;;
            *)
            echo "$__help"
            ;;
        esac
    ;;
    *)
        echo "$__help"
    ;;
esac

